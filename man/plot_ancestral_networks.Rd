% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_ancestral_networks}
\alias{plot_ancestral_networks}
\title{Plot ancestral networks with module information}
\usage{
plot_ancestral_networks(
  summary_networks,
  matched_modules,
  tree,
  module_levels = NULL,
  colors = NULL,
  node_size = NULL,
  level_names = c("Host", "Symbiont")
)
}
\arguments{
\item{summary_networks}{A list of incidence matrices (summary network) for each time slice in
\code{ages}. Output of \code{get_summary_network()}}

\item{matched_modules}{A list of lists containing the module information for each node at each
network. Output of \code{modules_across_ages()}.}

\item{tree}{The phylogeny of the symbiont clade (e.g. parasites, herbivores). Object of class
\code{phylo}.}

\item{module_levels}{Order in which the modules should be organized. Affects which color each
module will be assigned. If NULL, takes the order of appearance in \code{matched_modules$module}.}

\item{colors}{Color vector used to plot module information.}

\item{node_size}{Size of the nodes in every network. If NULL, the default size is plotted.}

\item{level_names}{Optional string vector with two elements used by legend: name of the clade
modeled as "host" and the name of the clade modeled as "symbiont".}
}
\value{
A list of plots of class \code{patchwork}. Each element contains the tree and network at a
given time slice.
}
\description{
Plot ancestral networks with module information
}
\examples{
\dontrun{
  # read data that comes with the package
  data_path <- system.file("extdata", package = "evolnets")
  tree <- read_tree_from_revbayes(paste0(data_path,"/tree_pieridae.tre"))
  host_tree <- ape::read.tree(paste0(data_path,"/host_tree_pieridae.phy"))
  history <- read_history(paste0(data_path,"/history_thin_pieridae.txt"), burnin = 0)

  # find and match modules of summary networks at ages
  ages <- c(60, 50, 40, 0)
  at_ages <- posterior_at_ages(history, ages, tree, host_tree)
  summary_networks <- get_summary_networks(at_ages, threshold = 0.5, weighted = TRUE)
  all_mod <- modules_across_ages(summary_networks, tree)

  # plot
  plot <- plot_ancestral_networks(summary_networks, all_mod, tree)
  patchwork::wrap_plots(plot, guides = "collect")
}
}
