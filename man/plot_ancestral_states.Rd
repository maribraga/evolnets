% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_ancestral_states}
\alias{plot_ancestral_states}
\title{Plot ancestral states on the phylogeny.}
\usage{
plot_ancestral_states(
  tree,
  samples_at_nodes,
  modules,
  module_order = NULL,
  type = "states",
  state = 2,
  repertoire = "fundamental",
  layout = "rectangular",
  threshold = 0.9,
  point_size = 3,
  point_shape = NULL,
  dodge_width = 0.025,
  legend = TRUE,
  colors = NULL,
  state_alpha = c(0.3, 1),
  ladderize = FALSE
)
}
\arguments{
\item{tree}{The phylogeny, a \code{phylo} object.}

\item{samples_at_nodes}{A list of length 2, output from \code{posterior_at_nodes()}.}

\item{modules}{A \code{moduleWeb} or a \code{data.frame} object defining the modules in the network.
If a \code{data.frame} is passed, it must contain three columns:
$name with taxon names,
$module with the module the taxon was assigned to, and
$type which defines if the taxon is a "host" or a "symbiont".}

\item{module_order}{A character vector giving the order that modules should be plotted. Should contain
each module only once.}

\item{type}{One of \code{'states'} or \code{'repertoires'}. If \code{'states'}, will plot the presence of a
state when its posterior probability is higher than \code{threshold}. If \code{'repertoires'}, will plot
the same but for the given \code{repertoire}.}

\item{state}{Which state? Default is 2. For analyses using the 3-state model, choose \code{1} or \code{2}
(where 1 is a potential host and 2 an actual host). Only used if \code{type} is \code{'states'}.}

\item{repertoire}{Either the \code{'realized'} repertoire which is defined as state 2, or the
\code{'fundamental'} repertoire (default) which is defined as having any state (usually 1 or 2), and
in the 3-state model includes both actual and potential hosts.}

\item{layout}{One of \code{'rectangular'}, \code{'slanted'}, \code{'fan'}, \code{'circular'}, \code{'radial'},
\code{'equal_angle'}, \code{'daylight'} or \code{'ape'}.}

\item{threshold}{The posterior probability above which the ancestral states should be shown.
Defaults to 90\% (\code{0.9}). Numeric vector of length 1.}

\item{point_size}{How large the ancestral state points should be, default at 3. Play with this
and \code{dodge_width} to get a pleasing result. Numeric vector of length 1.}

\item{point_shape}{What point shape should be used for the ancestral states? When left \code{NULL},
a reasonable default will be chosen. Otherwise, a numeric vector of length 1.}

\item{dodge_width}{How far the points should be pushed apart, when there is multiple states at
a single node, default at 0.025. Play with this and \code{point_size} to get a pleasing result.
Numeric vector of length 1.}

\item{legend}{Whether to display a legend for the colors. Logical vector of length 1.}

\item{colors}{Override the default colors. Should be a character vector with as many color values
as there are modules.}

\item{state_alpha}{A numeric vector of length 2. Gives the alpha
(transparency) values for the interaction type in the three-state model}

\item{ladderize}{Logical. Whether to ladderize the tree. Default to FALSE.

The ancestral states are automatically colored by module. To change what colors are used, you
can add color scales to the resulting \code{ggplot}, e.g. \code{ggplot2::scale_color_manual()}.}
}
\value{
A \code{ggplot} object.
}
\description{
Plot ancestral states on the phylogeny.
}
\examples{
\dontrun{
  san <- posterior_at_nodes(history, tree, host_tree, 66 + 1:65)
  mods <- mycomputeModules(extant_net)
  plot_ancestral_states(tree, san, mods)
  # Manual colors
  plot_ancestral_states(tree, san, mods, colors = rainbow(20))
}
}
